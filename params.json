{
  "name": "Tarun Mangukiya's GitHub",
  "tagline": "jQuery Ajax Library",
  "body": "# jQuery Ajax Library\r\n\r\nA light-weight jQuery Library to enhance the existing ajax tasks. It provides different libraries such as Ajax Form, Ajax File Upload, Ajax Link, etc. It uses both client and server side to successfully submit and manipulate the existing forms.\r\n\r\nContains the following Library for advanced ajax support\r\n  - AjaxForm\r\n  - VirtualAjaxForm (Documentation writing is pending, you can have a look at example on how to use it)\r\n\r\n##AjaxForm\r\nAjaxForm modifies existing html form into a advanced AjaxHelper AjaxForm. Using AjaxForm you can not only make the form ajax but also add the advanced functionalities like displaying errors, information messages, update the parts of page in case of success, redirect between pages, etc.\r\n\r\nAjaxForm supports [jQuery Validation Plugin](http://jqueryvalidation.org/) and Bootstrap Validator for validation. You can even define error messages from server side and the messages will be displayed in the your respective validation format.\r\n\r\n###Use\r\n####Client Side\r\n```javascript\r\n$(function(){\r\n  $(\"#form\").ajaxForm(options);\r\n});\r\n```\r\n####Server Side Response\r\n```php\r\n{\r\n    \"status\" : \"success|error\",\r\n\t\"message\" : \"Form Submitted Successfully.\"\r\n}\r\n```\r\n###Options - Client Side\r\nHere the options may have the following options:\r\n```javascript\r\noptions = {\r\n\tvalidatorType: 'null|jQueryValidation|BootstrapValidator',\r\n\taction: '/',\r\n\ttype: 'POST',\r\n\tloadingClass: 'ajax-loading',\r\n\tmessage: {\r\n\t\tpre: '<div class=\"alert alert-info\" role=\"alert\">',\r\n\t\tpost: '</div>'\r\n\t},\r\n\terror : {\r\n\t\tpre: '<div class=\"alert alert-danger\" role=\"alert\">',\r\n\t\tpost: '</div>'\r\n\t}\r\n\tbeforeSubmit: function(element) { },\r\n\tafterSubmit: function(response|jqXHR, element) { },\r\n\terrorPlacement: function(error, element) { },\r\n\tmessagePlacement: function(message, element) { },\r\n\tonSuccess: function(response, element) { },\r\n\tonError: function(response, element) { },\r\n\tonFail: function(jqXHR, element) { }\r\n }\r\n```\r\n#####validatorType:\r\nValidator that you have used in the form `[null|jQueryValidation|BootstrapValidator]`\r\n\r\n#####action:\r\nURL to which Form has to be submitted\r\n\r\n#####type:\r\ntype of request `[GET|POST]`\r\n\r\n#####loadingClass:\r\nName of Class that will be assigned to form element when the form ajax is processing. Can be used to put a loading indicator in the form.\r\n\r\n#####message/error:\r\n**pre**: Pre HTML that will be prepended before the message/error text `<div class=\"alert alert-info\" role=\"alert\">`\r\n\r\n**post**: Post HTML that will be prepended before the message/error text `</div>`\r\n#####beforeSubmit:\r\nDefine the function that will be called before the ajax request is sent. You can assign return value `false` to stop the form to be submitted.\r\n#####afterSubmit:\r\nDefine the function that will be called after the ajax request completes.\r\nArguments of the request will be jqXHR or response and element respectively.\r\n#####errorPlacement:\r\nFunction that will handle the error placement for the form.\r\nThis function will be executed when the response `status` from server is `error`.\r\nArguments of the request will be response and element respectively.\r\n#####messagePlacement:\r\nFunction that will handle the message placement for the form.\r\nThis function will be executed when the response `status` from server is `success`.\r\nArguments of the request will be response and element respectively.\r\n#####messagePlacement:\r\nDefine the function that will be called on successful submission of form (Server Side: `\"status\":\"success\"`).\r\n#####onError:\r\nDefine the function that will be called on error in submission of form. (Server Side: `\"status\":\"error\"`).\r\n#####onFail:\r\nDefine the function that will be called on server error. (No Response or invalid response from server)\r\n\r\n###Response From Server Side\r\n#####Display error messages\r\nDisplay error messages for each inputs (works only in case of validator)\r\n```json\r\n{\r\n    \"status\":\"error\",\r\n    \"elements\" : {\r\n        \"user_name\":\"User name already exists. Please select another user name.\"\r\n    }\r\n}\r\n```\r\nHere, `elements` will contain the object of each field (name attribute in html) with error message.\r\n\r\nExample (in case of **Laravel** users using Validator):\r\n```php\r\nreturn \\Response::json(['status' => 'error', 'elements' => $validator->errors()]);\r\n```\r\nExample (in case of **CodeIgniter** users using Validator):\r\n```php\r\nreturn \\Response::json(['status' => 'error', 'elements' => $this->form_validation->error_array()]);\r\n```\r\nOr, you can manually provide the response in json format.\r\n\r\n#####Redirect Page to another page on success\r\nSometimes we need to redirect the page on successful submit. Thus we can define `redirect` variable in response. Thus the page will be redirected to the specified url (or refreshed in case of blank url).\r\n```javascript\r\n {\r\n\t\"status\" : \"success|error\", \t\t\t\t// (required) - shows the form is submitted successfully\r\n\t\"redirect\" : \"http://mysite.com/page2/\", \t// (optional) - in case of success, the page is redirected to this url\r\n\t\"message\" : \"Form Submitted, or has Error\"\t// (optional) - Shows the custom message/error on top of the form\r\n }\r\n```\r\n#####Update the Elements of a page\r\nSometimes in case of success, you can update the parts of the page rather than refreshing the whole page (most of us use this only).\r\nFor this you have to add this variables `updateExtra`, `affectedElement`, `content` in response.\r\n```javascript\r\n{\r\n\t\"status\" : \"success\",\t\t\t\t// Status must be 'success'\r\n\t\"updateExtra\" : true,\t\t\t\t// Shows that we need to update a part of web page\r\n\t\"affectedElement\" : \".selector\",\t// CSS Selector of the element to be updated\r\n\t\"content\" : \"<h1>Updated</h1>\"\t\t// New Content in HTML Format\r\n }\r\n```\r\nBy using this the `'content'` html will be replaced in `'.selector'` element.\r\n\r\n### Contact\r\nYou can tweet me at [@tarunmangukiya](https://twitter.com/TarunMangukiya) for additional information.\r\n\r\n\r\n**Enjoy guys, don't forget to provide your suggestions and reviews for continious improvements.**",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}